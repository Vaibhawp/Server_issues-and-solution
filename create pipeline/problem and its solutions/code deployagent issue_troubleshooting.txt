To troubleshoot and resolve deployment failures at the install event in CodeDeploy, follow these steps:

1. **Check the CodeDeploy Agent Logs**:
   Connect to your EC2 instance and check the CodeDeploy agent logs for detailed error messages.
   
   ```sh
   ssh -i /path/to/your-key.pem ubuntu@your-ec2-instance-public-dns
   cd /var/log/aws/codedeploy-agent/
   tail -f codedeploy-agent.log
   ```

2. **Check the Script Permissions**:
   Ensure that all scripts in the `Scripts` directory have the correct permissions.
   
   ```sh
   chmod +x Scripts/*.sh
   ```

3. **Debugging the Scripts**:
   Add debugging statements to your scripts to log outputs and errors. For example, you can add `echo` statements and redirect error outputs to log files.
   
   ```sh
   # Example for UnzipResourceBundle.sh
   #!/bin/bash

   echo "Starting UnzipResourceBundle.sh"
   unzip /path/to/resource_bundle.zip -d /webapps/resources 2>&1 | tee /tmp/unzip_resource_bundle.log
   if [ $? -eq 0 ]; then
       echo "Resource bundle unzipped successfully."
   else
       echo "Failed to unzip resource bundle."
       exit 1
   fi
   ```

4. **Review and Fix Common Issues**:
   - Ensure the paths in your scripts are correct and accessible by the CodeDeploy agent.
   - Check for any missing dependencies or commands not found in your scripts.

5. **Example Script with Debugging**:

### UnzipResourceBundle.sh
```sh
#!/bin/bash
# Unzip resource bundle with debugging

echo "Starting UnzipResourceBundle.sh" | tee -a /tmp/UnzipResourceBundle.log
unzip /path/to/resource_bundle.zip -d /webapps/resources 2>&1 | tee -a /tmp/UnzipResourceBundle.log
if [ $? -eq 0 ]; then
    echo "Resource bundle unzipped successfully." | tee -a /tmp/UnzipResourceBundle.log
else
    echo "Failed to unzip resource bundle." | tee -a /tmp/UnzipResourceBundle.log
    exit 1
fi
```

### UnzipDataBundle.sh
```sh
#!/bin/bash
# Unzip data bundle with debugging

echo "Starting UnzipDataBundle.sh" | tee -a /tmp/UnzipDataBundle.log
unzip /path/to/data_bundle.zip -d /webapps/data 2>&1 | tee -a /tmp/UnzipDataBundle.log
if [ $? -eq 0 ]; then
    echo "Data bundle unzipped successfully." | tee -a /tmp/UnzipDataBundle.log
else
    echo "Failed to unzip data bundle." | tee -a /tmp/UnzipDataBundle.log
    exit 1
fi
```

### RunResourceTests.sh
```sh
#!/bin/bash
# Run resource tests with debugging

echo "Starting RunResourceTests.sh" | tee -a /tmp/RunResourceTests.log
# Add your resource test commands here
if [ $? -eq 0 ]; then
    echo "Resource tests completed successfully." | tee -a /tmp/RunResourceTests.log
else
    echo "Resource tests failed." | tee -a /tmp/RunResourceTests.log
    exit 1
fi
```

### RunFunctionalTests.sh
```sh
#!/bin/bash
# Run functional tests with debugging

echo "Starting RunFunctionalTests.sh" | tee -a /tmp/RunFunctionalTests.log
# Add your functional test commands here
if [ $? -eq 0 ]; then
    echo "Functional tests completed successfully." | tee -a /tmp/RunFunctionalTests.log
else
    echo "Functional tests failed." | tee -a /tmp/RunFunctionalTests.log
    exit 1
fi
```

### MonitorService.sh
```sh
#!/bin/bash
# Monitor the service with debugging

echo "Starting MonitorService.sh" | tee -a /tmp/MonitorService.log
# Add your service monitoring commands here
if [ $? -eq 0 ]; then
    echo "Service is running correctly." | tee -a /tmp/MonitorService.log
else
    echo "Service monitoring failed." | tee -a /tmp/MonitorService.log
    exit 1
fi
```

### Check Deployment Logs

After making the above changes, redeploy your application and monitor the deployment logs:

1. **View CodeDeploy Logs**:
   ```sh
   tail -f /var/log/aws/codedeploy-agent/codedeploy-agent.log
   ```

2. **View Custom Logs**:
   Check the logs created by your scripts in the `/tmp` directory:

   ```sh
   cat /tmp/UnzipResourceBundle.log
   cat /tmp/UnzipDataBundle.log
   cat /tmp/RunResourceTests.log
   cat /tmp/RunFunctionalTests.log
   cat /tmp/MonitorService.log
   ```

By carefully reviewing these logs, you should be able to pinpoint the exact cause of the failure and address it accordingly.