To make a POST request to an API endpoint in Python and send JSON data, you can also use the `requests` library. Hereâ€™s an example code snippet for making a POST request:

```python
import requests

def post_api_data(api_url, payload, headers=None):
    try:
        # Send POST request to the API endpoint
        response = requests.post(api_url, json=payload, headers=headers)
        
        # Check if the request was successful
        response.raise_for_status()
        
        # Parse JSON response
        data = response.json()
        return data
    
    except requests.exceptions.HTTPError as http_err:
        print(f"HTTP error occurred: {http_err}")
    except Exception as err:
        print(f"An error occurred: {err}")

# Example usage
api_url = "https://api.example.com/data"  # Replace with your API endpoint
payload = {
    "key1": "value1",
    "key2": "value2"
}
headers = {
    "Authorization": "Bearer YOUR_API_TOKEN",  # Optional headers
    "Content-Type": "application/json"
}

response_data = post_api_data(api_url, payload, headers)
print(response_data)
```

### Explanation:

1. **`post_api_data` function**: Takes the `api_url`, `payload`, and optional `headers`.
2. **`requests.post(api_url, json=payload, headers=headers)`**: Sends a POST request to the API endpoint, passing `payload` as JSON data.
3. **`response.raise_for_status()`**: Checks for successful status; raises an error if the request failed.
4. **`response.json()`**: Parses the JSON response data if the request is successful.

### Notes:
- Replace `https://api.example.com/data` with your actual API endpoint.
- Update `payload` with the JSON data you want to send.
- Update the headers as needed, especially for authorization and content type.

### Dependencies:
Make sure the `requests` library is installed:

```bash
pip install requests
```

This code will send the JSON data in `payload` to your API endpoint and print the response.